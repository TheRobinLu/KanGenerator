-- *********************************************************************    
-- ^^ProjectName^^   ^^Description^^
-- 
-- History: 
-- ^^ModificationHistory^^
-- 
-- *********************************************************************\

-- Create dummy file to indicate that the Technical db connection is fine.
CALL dba.p_Log_Afaria('*** ^^ProjectName^^ Connection to dB as Technical is successful.', '^^ProjectName^^dB.Conn');
CALL dba.p_Log_Afaria('*** ^^ProjectName^^ Connection to dB as Technical is successful.', '^^ProjectName^^SDF.TXT');

SET TEMPORARY OPTION ON_ERROR = 'EXIT';
SET TEMPORARY OPTION COMMIT_ON_EXIT = 'OFF';
START LOGGING 'C:\ProPharmTemp\^^ProjectName^^DBE.LOG';

CALL dba.p_Log_Afaria('SDF - *** ^^ProjectName^^   Start.    Date: ' + STRING(CURRENT DATE), '^^ProjectName^^SDF.TXT');


------------------------------------------------------------------------------------------------------------------------
BEGIN   
------------------------------------------------------------------------------------------------------------------------
   DECLARE @ls_LogFile            VARCHAR(100);
   DECLARE @ls_ProvinceCode       CHAR(2);
   DECLARE @ls_ExpError           Varchar(2000); 
   DECLARE @li_Result             INTEGER; 
   DECLARE @ls_DBVersion          VARCHAR(100);
   DECLARE @ls_RunFile            Varchar (20);
   
	DECLARE @ls_ScriptTitle						varchar(100);
	DECLARE @ls_ErrorText						varchar(5000);
	DECLARE @ls_ScriptNumber					varchar(100);
	DECLARE @ls_ScriptType						varchar(100);                   
	DECLARE @li_FinancialImpact        			integer;
    SET @ls_ScriptNumber = '^^ProjectId^^';
    SET @ls_ScriptTitle = '^^ProjectName^^ EHR Profiles are not being displayed when ascii characters exists';
	SET @li_FinancialImpact = 0; //0 if NO financial impact (see "Financial Impact" field on JIRA. No = 0 ; Yes = 1) DEFAULT VALUE is 0
    SET @ls_ScriptType = 'Onetimer'; // Other scripttypes can be 'Periodic', 'Afaria'
	
	SET @ls_LogFile = '^^ProjectName^^SDF.TXT';
	SET @ls_RunFile   =   '^^ProjectName^^RunProc.TXT';
	SET @li_Result = 2; 
	
	-- Loaded before begin end block.
	CALL dba.p_Log_Afaria('SDF - Check the province and database version.', @ls_LogFile);

   SELECT ProvinceStateCode
         ,databaseversion
     INTO @ls_ProvinceCode
         ,@ls_DBVersion
     FROM Pharmacy
    WHERE Type = 'HOS';
   
   -- Only for 2.0 HF5 and 2.2 and higher and RxDm.
    IF @ls_DBVersion in ( ^^DBVersion^^ ) THEN
        //Independent and 2.2 or higher
        SET @li_Result = 1;
    END IF;

   IF @li_Result = 2 THEN
      SET @li_Result = 2;
      CALL dba.p_Log_Afaria('SDF - Store not meet job criteria.', @ls_LogFile);
   END IF;
   
   IF @li_Result =1 THEN
		COMMIT;
		CALL dba.p_Log_Afaria('SDF - ^^ProjectName^^ Job has been completed Successfully.' + STRING(CURRENT DATE), @ls_Logfile);  
        CALL dba.p_Log_Afaria('SDF - Conditions Met Store  Db Version ' + @ls_DBVersion, @ls_RunFile);
		CALL dba.p_SupportLog_i(@ls_ScriptNumber, 1, @ls_ScriptTitle, @ls_ErrorText, @ls_ScriptType, today(), null, null, @li_FinancialImpact);
   END IF;
    IF @li_Result=2 THEN
		COMMIT;
		SET @ls_ErrorText   = 'Job skipped. Selection criteria is not met.';  
		CALL dba.p_Log_Afaria('SDF - ^^ProjectName^^ Job has been completed Successfully.' + STRING(CURRENT DATE), @ls_Logfile);  
		CALL dba.p_SupportLog_i(@ls_ScriptNumber, 0, @ls_ScriptTitle, @ls_ErrorText, @ls_ScriptType, today(), null, null, @li_FinancialImpact);
	END IF;
    IF @li_Result=3 THEN
			ROLLBACK;
			CALL dba.p_Log_Afaria('SDF - *** ERROR Detected Changes will NOT be saved.***' + STRING(CURRENT DATE), @ls_Logfile); 
			CALL dba.p_Log_Afaria('SDF - NO CHANGES COMMITTED.' + STRING(CURRENT DATE)+ '.', @ls_Logfile);
			CALL dba.p_Log_Afaria('SDF - Job failed.', @ls_Logfile);
			CALL dba.p_Log_Afaria('SDF - *** ^^ProjectName^^  Done.    Date: ' + STRING(CURRENT DATE), @ls_Logfile); 
			RAISERROR 99999 'Job failed.';
   END IF;

------------------------------------------------------------------------------------------------------------------------     
EXCEPTION 
------------------------------------------------------------------------------------------------------------------------  
   WHEN OTHERS THEN    
		SELECT errormsg() INTO @ls_ExpError FROM Dummy;
		SET @ls_ErrorText = 'Error at line ' + string(ERROR_LINE()) + ' with SQLCODE ' + string(ERROR_SQLCODE()) + ' and SQLSTATE ' +  string(ERROR_SQLSTATE()) + ' error message: ' + ERROR_MESSAGE() + @ls_ErrorText;
		ROLLBACK;
		CALL dba.p_SupportLog_i(@ls_ScriptNumber, -1, @ls_ScriptTitle, @ls_ErrorText, @ls_ScriptType, today(), null, null, @li_FinancialImpact);
		COMMIT;
		CALL dba.p_Log_Afaria('SDF - Exceptional Error: '+ @ls_ExpError + '.  '              , '^^ProjectName^^SDF.TXT'); 
		CALL dba.p_Log_Afaria('SDF - NO CHANGES COMMITTED. '+STRING(CURRENT DATE)+'.'      , '^^ProjectName^^SDF.TXT');
		CALL dba.p_Log_Afaria('SDF - Job failed.'                                          , '^^ProjectName^^SDF.TXT');
		CALL dba.p_Log_Afaria('SDF - *** ^^ProjectName^^  Done.    Date: ' + STRING(CURRENT DATE), '^^ProjectName^^SDF.TXT');      
		RAISERROR 99999 'Job failed.';
        
------------------------------------------------------------------------------------------------------------------------        
END; 
------------------------------------------------------------------------------------------------------------------------

CALL dba.p_Log_Afaria('SDF - *** ^^ProjectName^^  Done.    Date: ' + STRING(CURRENT DATE), '^^ProjectName^^SDF.TXT');
SET TEMPORARY OPTION ON_ERROR = 'PROMPT';
SET TEMPORARY OPTION COMMIT_ON_EXIT = 'ON';
STOP LOGGING;
